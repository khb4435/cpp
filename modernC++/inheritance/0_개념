//private : 외부에서 오직 본 클래스의 퍼블릭 멤버함수를 통해서만 접근가능
//protected : 외부에서 오직 본 클래스의 퍼블릭 멤버함수를 통해서만 접근가능, 상속받은 클래스에서 접근가능

//virtual speak() = 0; 같은 건 순수가상함수라 하고 이런게 1개라도 있으면 객체 생성 불가
//상속받은 클래스에서 순수가상함수는 무조건! 재정의해줘야한다.

//멤버변수 하나도 없고, 순수가상함수로만 구성된 게 클래스의 base해주면 인터페이스 굿! 물론 객체 생성도 안됨

//Animal * animalPtr = new Cat();
//Animal을 포함하고 + 가 된 Cat객체가 만들어진다.
//근데 animalPtr은 Animal형을 가리키기 때문에 Cat객체의 Animal부분만 볼 수 있다.
//그치만 virtual로 선언되서 *virtual Table이 껴있는데 얘가 Cat의 virtual Table을 실행하게된다.
